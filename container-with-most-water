class Solution:
    def maxArea(self, height: List[int]) -> int:
        n = len(height)
        heightWithIndexes = []
        heightWithIndexesReverse = []
        current_max = 0
        max_reverse = 0
        for i in range(n):
            if (height[i] > current_max):
                heightWithIndexes.append([height[i],i])
                current_max = height[i]
                
            if (height[n-i-1] > max_reverse):
                heightWithIndexesReverse.append([height[n-i-1],n-i-1])
                max_reverse = height[n-i-1]
        
        print(*heightWithIndexes)
        print(*heightWithIndexesReverse)
        index_l2r = 0
        index_r2l = 0
        answer = 0
        while True:
            if (index_r2l == len(heightWithIndexesReverse)-1 and index_l2r == len(heightWithIndexes)-1):
                answer = max(answer, heightWithIndexes[index_l2r][0]*(heightWithIndexesReverse[index_r2l][1] - heightWithIndexes[index_l2r][1]))
                break
            elif (heightWithIndexes[index_l2r][0] < heightWithIndexesReverse[index_r2l][0]):
                answer = max(answer, heightWithIndexes[index_l2r][0]*(heightWithIndexesReverse[index_r2l][1] - heightWithIndexes[index_l2r][1]))
                index_l2r+=1
            else:
                answer = max(answer, heightWithIndexesReverse[index_r2l][0]*(heightWithIndexesReverse[index_r2l][1] - heightWithIndexes[index_l2r][1]))
                index_r2l+=1
                
        return answer
                
                
                
        
            
