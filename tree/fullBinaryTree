# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def allPossibleFBT(self, n: int) -> List[Optional[TreeNode]]:
        if n%2 ==0:
            return None
        else:
            dp = [[] for i in range(n+1)]
            for i in range(1,n+1,2):
                if i%2==0:
                    continue
                else:
                    if i == 1:
                        dp[i] = [TreeNode()]
                    else:
                        for j in range(1,i,2):
                            leftAns = dp[j]
                            rightAns = dp[i-j-1]
                            for k in leftAns:
                                for t in rightAns:
                                    newNode = TreeNode()
                                    newNode.left = k
                                    newNode.right = t
                                    dp[i].append(newNode)
            return dp[n]
        
