class Solution:
    def minPathSum(self, grid: List[List[int]]) -> int:
        m = len(grid)
        n = len(grid[0])
        dplin = [-1]*n
        dp = [dplin]*m
        
        dp[m-1][n-1] = grid[m-1][n-1]
        t = 3
        for k in range(m+n-3,-1,-1):
            if t >= (m+1):
                t = m+1
            if (k >= m-1):
                start = m-1
            else:
                start = k
            for i in range(start,m-t,-1):
                j = k-i
                if (i+1 > m-1):
                    dp[i][j] = grid[i][j] + dp[i][j+1]
                elif (j+1 > n-1):
                    dp[i][j] = grid[i][j] + dp[i+1][j]
                else:                    
                    dp[i][j] = grid[i][j] + min(dp[i+1][j], dp[i][j+1])
            t+=1
        return dp[0][0]
                
