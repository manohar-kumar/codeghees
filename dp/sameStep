class Solution:
    def numWays(self, steps: int, arrLen: int) -> int:
        modNum = 1000000007
        dpvar = min(steps+1,arrLen)
        dp = [[0 for i in range(steps+1)] for j in range(dpvar+2)]
        dp[0][0] = 1
        for i in range(1,dpvar):
            dp[i][0] = 0
        for j in range(1,steps+1):
            for i in range(dpvar):
                dp[i][j] = 0
                if i-1 >= 0:
                    dp[i][j] = (dp[i][j] + dp[i-1][j-1]) % modNum
                if (i+1) < arrLen:
                    dp[i][j] = (dp[i][j] + dp[i+1][j-1]) % modNum
                dp[i][j] = (dp[i][j] + dp[i][j-1]) % modNum
               
        #print(dp)
        return dp[0][steps]
