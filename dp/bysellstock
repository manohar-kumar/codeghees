class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        n = len(prices)
        answer = 0
        dp = [[0,0,[12345667,0]] for x in range(n)]
        dp[0] = [prices[0],0,[1234567,0]]
        
        for i in range(1,n,1):
            dp[i][0] = min(dp[i-1][0], prices[i])
            dp[i][1] = max(dp[i-1][1], prices[i] - dp[i-1][0])
            if (dp[i][1] > answer):
                answer = dp[i][1]
            if (dp[i-1][1] > 0):
                if ((dp[i-1][2][0] - dp[i-1][2][1]) < (prices[i] - dp[i-1][1])):
                    dp[i][2][0] = dp[i-1][2][0]
                    dp[i][2][1] = dp[i-1][2][1]
                else:
                    dp[i][2][0] = prices[i]
                    dp[i][2][1] = dp[i-1][1]
                
            temp = dp[i-1][2][1] + prices[i] - dp[i-1][2][0]
            if (temp > answer):
                answer = temp
        print(dp)        
        return answer
        
        
