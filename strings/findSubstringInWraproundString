class Solution:
    def findSubstringInWraproundString(self, p: str) -> int:
        count,answer = 1,0
        hasher = [0 for i in range(26)]
        for i in range(0, len(p)):
            if (i != 0 and self.isNextChar(p[i-1],p[i])):
                count+=1
            else:
                count = 1
            if (hasher[ord(p[i]) - ord('a')] < count):
                answer += count - hasher[ord(p[i]) - ord('a')]
            hasher[ord(p[i]) - ord('a')] = max(hasher[ord(p[i]) - ord('a')], count)
        
        return answer
        

        
    
    def isNextChar(self, a: str,b :str) -> bool:
        if (a == 'z' and b == 'a'):
            return True
        elif (ord(b) - ord(a)) == 1:
            return True
        else:
            return False
